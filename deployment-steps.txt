git init
git add .
git commit -m "Initial commit"
git branch -M main
git remote add origin [Your Github URL will be shown after creating repository]
git push -u origin main
```

## 2. Required Configuration Files

### vercel.json (Copy & Paste Complete File):
```json
{
  "version": 2,
  "buildCommand": "npm run build",
  "outputDirectory": "dist",
  "installCommand": "npm install",
  "framework": "vite",
  "rewrites": [
    {
      "source": "/(.*)",
      "destination": "/index.html"
    }
  ],
  "env": {
    "NODE_ENV": "production"
  }
}
```

### .env.production (Copy & Paste & Fill Values):
```env
VITE_API_URL=https://your-project-name.vercel.app
SMTP_USER=your-email@gmail.com
SMTP_PASS=your-app-specific-password
```

## 3. Build Commands (Already Set in package.json):
```json
{
  "scripts": {
    "build": "vite build",
    "start": "vite preview"
  }
}
```

## 4. Vercel Deployment Steps:

1. Go to https://vercel.com/new
2. Click "Import Git Repository"
3. Select your repository
4. Use These Exact Settings (Copy & Paste):
   - Framework Preset: Vite
   - Root Directory: ./
   - Build Command: npm run build
   - Output Directory: dist
   - Install Command: npm install

5. Add These Environment Variables (Copy Names Exactly):
   ```
   VITE_API_URL
   SMTP_USER
   SMTP_PASS
   ```

6. Click "Deploy"

## 5. Post-Deployment Checks:
1. Open deployed URL
2. Test contact form submission
3. Check email delivery
4. Verify mobile responsiveness

## 6. Domain Setup (If Needed):
1. Go to Project Settings â†’ Domains
2. Add your domain
3. Follow DNS configuration shown by Vercel

## Troubleshooting Commands (If Needed):
```bash
# Clear build cache
rm -rf .next .vercel/output dist

# Force clean install
rm -rf node_modules package-lock.json
npm install

# Update all dependencies
npm update